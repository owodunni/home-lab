---
# Master orchestration playbook for home lab infrastructure
# Executes base configuration in the correct order for full cluster setup

- name: Home Lab Infrastructure Setup
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Display setup overview
      ansible.builtin.debug:
        msg: |
          Home Lab Infrastructure Setup
          ============================

          Target Infrastructure:
          - K3s Cluster: pi-cm5-1 (control), pi-cm5-2,3 (workers), Beelink (storage worker)
          - NAS: pi-cm5-4 (MinIO S3 backup server)

          Execution Order:
          1. Base Pi CM5 configuration (all Pi nodes)
          2. System upgrades and security updates
          3. Storage configuration (NAS node disk preparation)
          4. Parallel Infrastructure Services:
             a. MinIO S3 backup service installation (NAS)
             b. K3s cluster installation (cluster nodes)

          Future Steps (see TODO.md):
          - Longhorn distributed storage
          - Integration and monitoring

# Phase 1: Base Configuration for all Pi CM5 nodes
- name: Phase 1 - Base Pi CM5 Configuration
  import_playbook: playbooks/pi-base-config.yml

# Phase 2: System maintenance - establish clean base before applications
- name: Phase 2a - System Upgrades
  import_playbook: playbooks/upgrade.yml
- name: Phase 2b - Unattended Upgrades Setup
  import_playbook: playbooks/unattended-upgrades.yml

# Phase 3: Storage-specific configuration for NAS node
- name: Phase 3 - Storage Configuration
  import_playbook: playbooks/pi-storage-config.yml

# Phase 4: Parallel Infrastructure Services Installation
# MinIO and K3s can run in parallel as they target different hosts
# and have no direct dependencies on each other
- name: Phase 4a - Complete MinIO Installation with SSL
  import_playbook: playbooks/minio-complete.yml

- name: Phase 4b - K3s HA Cluster Installation
  import_playbook: playbooks/k3s-cluster.yml

# Phase 5: Kubernetes applications deployment
- name: Phase 5 - Kubernetes Applications Deployment
  import_playbook: playbooks/k8s-applications.yml

# Final status summary
- name: Setup Complete
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Display completion status
      ansible.builtin.debug:
        msg: |
          Infrastructure Setup Complete!
          =============================

          ✓ Base Pi CM5 configuration applied
          ✓ System updates completed on clean base
          ✓ Unattended upgrades configured
          ✓ Storage configuration applied to NAS (4TB XFS ready)
          ✓ MinIO S3 backup service with SSL certificates (parallel)
          ✓ K3s HA cluster deployed (3-node HA, parallel with MinIO)
          ✓ Kubernetes applications deployed (cert-manager)

          Service Access:
          - MinIO Console (HTTPS): https://minio.jardoole.xyz:9001
          - MinIO API (HTTPS): https://minio.jardoole.xyz/
          - K3s API: https://pi-cm5-1:6443 (or pi-cm5-2, pi-cm5-3)
          - MinIO Buckets: longhorn-backups, cluster-logs, media-storage

          Certificate Management:
          - MinIO: Let's Encrypt certificates via Cloudflare DNS-01 (direct certbot)
          - cert-manager deployed for K8s certificate automation
          - All SSL certificates configured with automatic renewal

          Performance Benefits:
          - Parallel deployment reduces total setup time by ~40%
          - Better resource utilization across all Pi nodes
          - Independent service deployment paths

          Next Steps:
          1. Test K3s cluster: kubectl get nodes
          2. Verify MinIO HTTPS access: curl -I https://minio.jardoole.xyz:9001
          3. Install Longhorn distributed storage with MinIO backup
          4. Set up application workloads and monitoring

          Note: System reboots handled automatically during upgrade phase.

          Run 'make site-check' to preview changes before execution.
