---
# Pi CM5 configuration tasks - using geerlingguy's elegant lineinfile pattern
# Simple, variable-driven approach for maximum flexibility

- name: Backup original config.txt if backup enabled
  ansible.builtin.copy:
    src: "{{ pi_cm5_config_config_file }}"
    dest: "{{ pi_cm5_config_config_file }}.backup-{{ ansible_date_time.epoch }}"
    remote_src: true
    mode: "0644"
  when:
    - pi_cm5_config_backup_enabled | default(true)
    - not ansible_check_mode
  register: pi_cm5_config_backup_result
  tags:
    - pi-cm5-config
    - backup

- name: Configure base Pi CM5 settings in config.txt
  ansible.builtin.lineinfile:
    dest: "{{ pi_cm5_config_config_file }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    insertafter: EOF
    state: present
    create: true
    # Note: Intentionally not setting mode to preserve RPi OS default permissions
    # ansible-lint risky-file-permissions can be ignored here
  with_items: "{{ pi_cm5_config_base_config }}"
  notify: reboot required
  tags:
    - pi-cm5-config
    - base-settings

- name: Configure Pi CM5 power optimization settings
  ansible.builtin.lineinfile:
    dest: "{{ pi_cm5_config_config_file }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    insertafter: EOF
    state: present
  with_items: "{{ pi_cm5_config_power_config }}"
  notify: reboot required
  tags:
    - pi-cm5-config
    - power-optimization

- name: Configure Pi CM5 PCIe settings
  ansible.builtin.lineinfile:
    dest: "{{ pi_cm5_config_config_file }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    insertafter: EOF
    state: present
  with_items: "{{ pi_cm5_config_pcie_config }}"
  notify: reboot required
  tags:
    - pi-cm5-config
    - pcie-settings

- name: Configure Pi CM5 POE settings
  ansible.builtin.lineinfile:
    dest: "{{ pi_cm5_config_config_file }}"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    insertafter: EOF
    state: present
  with_items: "{{ pi_cm5_config_poe_config }}"
  notify: reboot required
  tags:
    - pi-cm5-config
    - poe-settings

- name: Create manual backup of cmdline.txt before cgroup changes
  ansible.builtin.copy:
    src: "{{ pi_cm5_config_cmdline_file }}"
    dest: "{{ pi_cm5_config_cmdline_file }}.backup-{{ ansible_date_time.epoch }}"
    remote_src: true
    mode: preserve
  when:
    - pi_cm5_config_cgroup_enabled | default(false)
    - not ansible_check_mode
  tags:
    - pi-cm5-config
    - cgroup-settings

- name: Enable cgroups for Kubernetes in cmdline.txt
  ansible.builtin.replace:
    path: "{{ pi_cm5_config_cmdline_file }}"
    regexp: '^((?!.*cgroup_memory=1)(?!.*cgroup_enable=memory).*)$'
    replace: '\1 cgroup_memory=1 cgroup_enable=memory'
    backup: false
  when: pi_cm5_config_cgroup_enabled | default(false)
  notify: reboot required
  tags:
    - pi-cm5-config
    - cgroup-settings
