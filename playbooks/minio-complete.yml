---
# Complete MinIO installation with SSL certificates and HTTPS configuration
# Combines basic MinIO setup with Let's Encrypt SSL certificates on port 443

# Phase 1: SSL Certificate Setup (BEFORE MinIO installation)
- import_playbook: ssl-certificates.yml

# Phase 2: MinIO Installation with SSL certificates
- name: Install and configure MinIO S3 storage with SSL
  hosts: nas
  become: true
  gather_facts: true

  vars:
    minio_https_port: 443

  pre_tasks:
    - name: Display installation overview
      ansible.builtin.debug:
        msg: |
          Complete MinIO Installation Starting
          ===================================

          Phase 1: SSL Certificates (✓ Complete)
          - Domain: {{ minio_internal_domain }}
          - Certificate Provider: Let's Encrypt (DNS-01)
          - Auto-renewal: Configured

          Phase 2: MinIO Installation with SSL
          - Storage directories: {{ minio_server_datadirs | length }}
          - Root user: {{ minio_root_user }}
          - Buckets to create: {{ minio_buckets | length }}
          - Users to create: {{ minio_users | length }}
          - HTTPS Port: {{ minio_https_port }}

          This will result in a fully functional MinIO instance with HTTPS on port 443.
      tags:
        - overview

    - name: Verify storage preparation is complete
      ansible.builtin.stat:
        path: "{{ item }}"
      register: storage_check
      failed_when: not storage_check.stat.exists and not ansible_check_mode
      loop: "{{ minio_server_datadirs }}"
      tags:
        - verification

  tasks:
    # SSL certificates now exist from Phase 1, configure MinIO to use them
    - name: Install MinIO prerequisites
      ansible.builtin.package:
        name:
          - libcap2-bin  # For setcap functionality
        state: present
        update_cache: true
      tags:
        - minio-setup
        - phase2

    - name: Ensure MinIO certificate directory exists
      ansible.builtin.file:
        path: "{{ minio_cert_path }}"
        state: directory
        owner: root
        group: root
        mode: '0755'
      tags:
        - minio-setup
        - phase2

    - name: Fix Let's Encrypt directory permissions for MinIO access
      ansible.builtin.file:
        path: "{{ item }}"
        mode: '0755'
        owner: root
        group: root
      loop:
        - /etc/letsencrypt/live
        - /etc/letsencrypt/archive
      tags:
        - minio-setup
        - phase2

    - name: Link certificates to MinIO directory
      ansible.builtin.command:
        cmd: ln -sf "/etc/letsencrypt/live/{{ minio_internal_domain }}/{{ item.src }}" "{{ minio_cert_path }}/{{ item.dest }}"
      loop:
        - { src: 'fullchain.pem', dest: 'public.crt' }
        - { src: 'privkey.pem', dest: 'private.key' }
      tags:
        - minio-setup
        - phase2

    # Phase 2: Install MinIO with SSL (certificates now exist)
    - name: Display Phase 2 start
      ansible.builtin.debug:
        msg: |
          Phase 2: MinIO Installation with SSL
          ====================================
          SSL certificates are now ready. Installing MinIO with:
          - Console Port: {{ minio_console_port }} (HTTPS)
          - API Port: {{ minio_server_port }} (HTTPS) 
          - Certificate Directory: {{ minio_cert_path }}
      tags:
        - minio-install
        - phase2

    - name: "Phase 2: Install MinIO using ricsanfre.minio role"
      ansible.builtin.include_role:
        name: ricsanfre.minio
      tags:
        - minio-install
        - phase2

    - name: Fix Let's Encrypt private key permissions for MinIO access
      ansible.builtin.file:
        path: "/etc/letsencrypt/archive/{{ minio_internal_domain }}/privkey1.pem"
        group: minio
        mode: '0640'
      tags:
        - minio-install
        - phase2

    - name: Fix MinIO data directory ownership
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: minio
        group: minio
        recurse: true
      loop: "{{ minio_server_datadirs }}"
      tags:
        - minio-install
        - phase2

    - name: Enable MinIO binary to bind to privileged ports (443)
      ansible.builtin.command:
        cmd: setcap cap_net_bind_service=+ep /usr/local/bin/minio
      register: setcap_result
      changed_when: setcap_result.rc == 0
      tags:
        - minio-install
        - phase2

    - name: Add localhost resolution for MinIO domain
      ansible.builtin.lineinfile:
        path: /etc/hosts
        line: "127.0.0.1 {{ minio_internal_domain }}"
        regexp: "^127\\.0\\.0\\.1.*{{ minio_internal_domain }}"
        state: present
      tags:
        - minio-install
        - phase2

    - name: Display Phase 2 completion
      ansible.builtin.debug:
        msg: |
          Phase 2 Complete: MinIO Installation with SSL
          =============================================
          ✓ MinIO server installed and running with SSL
          ✓ HTTPS Console available on port {{ minio_console_port }}
          ✓ HTTPS API available on port {{ minio_server_port }}
          ✓ Buckets and users configured
          
          Ready for final verification...
      tags:
        - minio-install
        - phase2

  handlers:
    - name: reload systemd
      ansible.builtin.systemd:
        daemon_reload: true

    - name: restart minio
      ansible.builtin.systemd:
        name: minio
        state: restarted
        daemon_reload: true

    - name: wait for minio
      ansible.builtin.wait_for:
        port: "{{ minio_https_port }}"
        host: "{{ inventory_hostname }}"
        delay: 10
        timeout: 60
      listen: restart minio

  post_tasks:
    - name: Verify MinIO is running on port 443
      ansible.builtin.wait_for:
        port: "{{ minio_https_port }}"
        host: "{{ ansible_default_ipv4.address }}"
        timeout: 30
      register: port_443_ready
      failed_when: false
      tags:
        - verification

    - name: Test HTTPS access
      ansible.builtin.uri:
        url: "https://{{ minio_internal_domain }}/"
        method: GET
        status_code: [200, 400, 403]  # MinIO may return 400/403 for root path
        validate_certs: true
        timeout: 30
      register: minio_https_test
      failed_when: false
      tags:
        - verification

    - name: Display SSL certificate information
      ansible.builtin.command:
        cmd: "certbot certificates"
      register: cert_info
      changed_when: false
      tags:
        - verification

    - name: Display complete installation summary
      ansible.builtin.debug:
        msg: |
          Complete MinIO Installation Summary
          ==================================

          ✓ Phase 1: SSL Certificate Generation Complete
          ✓ Phase 2: MinIO Installation with SSL Complete

          Access Information:
          - MinIO S3 API (HTTPS): https://{{ minio_internal_domain }}/
          - MinIO Console (HTTPS): https://{{ minio_internal_domain }}:{{ minio_console_port }}
          - Root Username: {{ minio_root_user }}
          - Root Password: [stored in vault]

          Created Buckets:
          {% for bucket in minio_buckets %}
          - {{ bucket.name }} ({{ bucket.policy }}){% if bucket.object_locking | default(false) %} [locked]{% endif %}
          {% endfor %}

          Created Users:
          {% for user in minio_users %}
          - {{ user.name }} (access to: {{ user.buckets_acl | map(attribute='name') | join(', ') }})
          {% endfor %}

          SSL Configuration:
          - Certificate Provider: Let's Encrypt
          - Domain: {{ minio_internal_domain }}
          - HTTPS Port: {{ minio_https_port }}
          - Auto-renewal: Configured (twice monthly)

          Status Checks:
          - Port 443 Status: {{ 'Ready ✓' if not port_443_ready.failed else 'Check required ⚠️' }}
          - HTTPS Test: {{ 'Working ✓' if minio_https_test.status in [200, 400, 403] else 'Failed ⚠️' }}
          - Certificate Renewal Test: {{ 'PASSED ✓' if ssl_renewal_test.rc == 0 else 'FAILED ⚠️' }}

          Certificate Details:
          {{ cert_info.stdout }}

          Next Steps:
          1. Access MinIO Console: https://{{ minio_internal_domain }}:{{ minio_console_port }}
          2. Test S3 operations with valid SSL certificates
          3. Configure applications to use HTTPS endpoints
          4. Monitor certificate renewal: tail -f /var/log/certbot-renewal.log

          DNS Configuration Required:
          - Ensure {{ minio_internal_domain }} resolves to {{ ansible_default_ipv4.address }}
      when: not ansible_check_mode
      tags:
        - summary
