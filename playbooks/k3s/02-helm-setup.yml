---
# Phase 2: Helm Installation and Setup
# Installs Helm package manager on K3s cluster for application management

- name: Phase 2 - Helm Installation and Setup
  hosts: cluster
  become: true
  gather_facts: true
  run_once: true

  vars:
    helm_version: "v3.18.6"
    helm_install_dir: "/usr/local/bin"

  tasks:
    - name: Install Python dependencies for Kubernetes modules
      ansible.builtin.package:
        name:
          - python3-kubernetes
          - python3-yaml
        state: present
      tags:
        - prerequisites

    - name: Display Phase 2 overview
      ansible.builtin.debug:
        msg: |
          Phase 2: Helm Installation and Setup
          ====================================
          - Install Helm {{ helm_version }} package manager (latest stable)
          - Add essential Helm repositories for K8s applications
          - Verify Helm installation and cluster connectivity

          Helm enables deployment of complex applications:
          - cert-manager (SSL certificate automation)
          - Longhorn (distributed storage)
          - Prometheus/Grafana (monitoring stack)
          - Kubernetes Dashboard (cluster management)

    - name: Check if Helm is already installed
      ansible.builtin.command:
        cmd: helm version --short
      register: helm_version_check
      failed_when: false
      changed_when: false

    - name: Display current Helm version if installed
      ansible.builtin.debug:
        msg: "Helm already installed: {{ helm_version_check.stdout }}"
      when: helm_version_check.rc == 0

    - name: Download and install Helm binary
      ansible.builtin.unarchive:
        src: "https://get.helm.sh/helm-{{ helm_version }}-linux-arm64.tar.gz"
        dest: /tmp
        remote_src: true
        creates: "/tmp/linux-arm64/helm"
      when: helm_version_check.rc != 0
      register: helm_download

    - name: Install Helm binary to system path
      ansible.builtin.copy:
        src: /tmp/linux-arm64/helm
        dest: "{{ helm_install_dir }}/helm"
        mode: '0755'
        remote_src: true
      when: helm_version_check.rc != 0

    - name: Clean up Helm download files
      ansible.builtin.file:
        path: /tmp/linux-arm64
        state: absent
      when: helm_version_check.rc != 0

    - name: Verify Helm installation
      ansible.builtin.command:
        cmd: helm version --short
      register: helm_verify
      changed_when: false

    - name: Add Helm stable repository
      kubernetes.core.helm_repository:
        name: stable
        repo_url: https://charts.helm.sh/stable
        kubeconfig: /etc/rancher/k3s/k3s.yaml
      register: helm_repo_stable
      failed_when: false

    - name: Add Bitnami Helm repository
      kubernetes.core.helm_repository:
        name: bitnami
        repo_url: https://charts.bitnami.com/bitnami
        kubeconfig: /etc/rancher/k3s/k3s.yaml
      register: helm_repo_bitnami
      failed_when: false

    - name: Add Jetstack repository (cert-manager)
      kubernetes.core.helm_repository:
        name: jetstack
        repo_url: https://charts.jetstack.io
        kubeconfig: /etc/rancher/k3s/k3s.yaml
      register: helm_repo_jetstack
      failed_when: false

    - name: Add Longhorn repository (distributed storage)
      kubernetes.core.helm_repository:
        name: longhorn
        repo_url: https://charts.longhorn.io
        kubeconfig: /etc/rancher/k3s/k3s.yaml
      register: helm_repo_longhorn
      failed_when: false

    - name: Update all Helm repositories
      ansible.builtin.command:
        cmd: helm repo update
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      changed_when: false

    - name: List available Helm repositories
      ansible.builtin.command:
        cmd: helm repo list
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      register: helm_repos
      changed_when: false

    - name: Test Helm cluster connectivity
      ansible.builtin.command:
        cmd: helm list --all-namespaces
      environment:
        KUBECONFIG: /etc/rancher/k3s/k3s.yaml
      register: helm_test
      changed_when: false

    - name: Display Phase 2 completion
      ansible.builtin.debug:
        msg: |
          Phase 2 Complete: Helm Installation and Setup
          =============================================
          ✓ Helm {{ helm_verify.stdout }} installed
          ✓ Cluster connectivity: {{ 'SUCCESS' if helm_test.rc == 0 else 'FAILED' }}
          ✓ Repositories configured: {{ helm_repos.stdout_lines | length }}

          Configured repositories:
          {{ helm_repos.stdout }}

          Ready for application deployment phases:
          - Phase 3: Storage systems (Longhorn)
          - Phase 4: Core infrastructure (cert-manager)
          - Phase 6: Monitoring stack (Prometheus/Grafana)
          - Phase 7: Cluster dashboard
