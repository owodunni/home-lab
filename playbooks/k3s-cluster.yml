---
# K3s High Availability Cluster Setup
# Configures 3-node HA cluster with embedded etcd on Pi CM5 nodes
# Includes Pi-specific optimizations for ARM64 and eMMC storage

- name: Install additional kernel modules for K3s (if needed)
  hosts: cluster
  become: true
  gather_facts: true

  tasks:
    - name: Check if running on Raspberry Pi
      ansible.builtin.set_fact:
        is_raspberry_pi: "{{ ansible_facts['board'] is defined and 'Raspberry Pi' in ansible_facts['board'] }}"

    - name: Install additional kernel modules for Ubuntu on Pi
      ansible.builtin.package:
        name: linux-modules-extra-raspi
        state: present
      when:
        - is_raspberry_pi
        - ansible_facts['distribution'] == 'Ubuntu'
        - ansible_facts['distribution_major_version'] | int >= 21
      tags:
        - kernel-modules

- name: Deploy K3s HA cluster
  hosts: cluster
  become: true
  gather_facts: true

  roles:
    - role: xanmanning.k3s

  post_tasks:
    - name: Create .kube directory for root
      ansible.builtin.file:
        path: /root/.kube
        state: directory
        mode: '0755'
      tags:
        - kubeconfig

    - name: Copy kubeconfig for root access
      ansible.builtin.copy:
        src: /etc/rancher/k3s/k3s.yaml
        dest: /root/.kube/config
        remote_src: true
        mode: '0600'
      when: not ansible_check_mode
      tags:
        - kubeconfig

    - name: Wait for K3s to be ready
      ansible.builtin.wait_for:
        port: 6443
        host: "{{ ansible_default_ipv4.address }}"
        timeout: 300
      when: not ansible_check_mode
      tags:
        - verification

    - name: Verify cluster nodes
      ansible.builtin.command:
        cmd: kubectl get nodes -o json --kubeconfig /etc/rancher/k3s/k3s.yaml
      register: cluster_nodes_raw
      when:
        - inventory_hostname == groups['cluster'][0]
        - not ansible_check_mode
      tags:
        - verification
      changed_when: false

    - name: Parse cluster nodes information
      ansible.builtin.set_fact:
        cluster_nodes: "{{ cluster_nodes_raw.stdout | from_json }}"
      when:
        - inventory_hostname == groups['cluster'][0]
        - not ansible_check_mode
        - cluster_nodes_raw.stdout is defined
      tags:
        - verification

    - name: Display cluster status
      ansible.builtin.debug:
        msg: |
          K3s HA cluster deployed successfully!

          Cluster nodes ({{ cluster_nodes.items | length }}):
          {% for node in cluster_nodes.items %}
          - {{ node.metadata.name }}: {{ node.status.conditions |
            selectattr('type', 'equalto', 'Ready') | map(attribute='status') | first }}
          {% endfor %}

          Control plane endpoints:
          {% for host in groups['cluster'] %}
          - https://{{ hostvars[host]['ansible_default_ipv4']['address'] }}:6443
          {% endfor %}

          To access the cluster from your local machine:
          1. Copy /etc/rancher/k3s/k3s.yaml from any server node
          2. Update server URL to point to any control plane node
          3. kubectl get nodes
      when:
        - inventory_hostname == groups['cluster'][0]
        - not ansible_check_mode
        - cluster_nodes is defined
      tags:
        - verification

    - name: Display check mode information
      ansible.builtin.debug:
        msg: |
          K3s HA Cluster Deployment Preview (Check Mode)
          ============================================

          This dry-run shows what would be deployed:

          Target Infrastructure:
          {% for host in groups['cluster'] %}
          - {{ host }}: K3s server node with embedded etcd
          {% endfor %}

          Configuration Summary:
          - K3s Version: {{ k3s_release_version }}
          - Network: Flannel VXLAN backend
          - Cluster CIDR: {{ k3s_server['cluster-cidr'] }}
          - Service CIDR: {{ k3s_server['service-cidr'] }}
          - Disabled Components: {{ k3s_server.disable | join(', ') }}

          Control Plane Endpoints (after deployment):
          {% for host in groups['cluster'] %}
          - https://{{ hostvars[host]['ansible_default_ipv4']['address'] }}:6443
          {% endfor %}

          To actually deploy the cluster, run: make k3s-cluster
      when:
        - inventory_hostname == groups['cluster'][0]
        - ansible_check_mode
      tags:
        - verification
